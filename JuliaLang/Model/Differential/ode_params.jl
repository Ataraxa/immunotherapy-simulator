mutable struct baseParams
    t_d::Float64
    t_delay::Float64
    t_last::Float64
    t_delay12::Float64
    t_last12::Float64

    k1::Float64
    k2::Float64
    k3::Float64
    k4::Float64
    k5::Float64
    k6::Float64

    d1::Float64
    d2::Float64
    d3::Float64
    d4::Float64
    d5::Float64
    d6::Float64
    d7::Float64
    d8::Float64

    s1::Float64
    s2::Float64
    
    u0::Vector{Float64}
end

mutable struct neoParams
    t_d::Float64
    t_delay::Float64
    t_last::Float64
    t_delay12::Float64
    t_last12::Float64

    k1::Float64
    k2::Float64
    k3::Float64
    k4::Float64
    k5::Float64
    k6::Float64

    d1::Float64
    d2::Float64
    d3::Float64
    d4::Float64
    d5::Float64
    d6::Float64
    d7::Float64
    d8::Float64

    s1::Float64
    s2::Float64
    
    n1::Float64

    u0::Vector{Float64}
end


christian = baseParams(
    1.8728241605057228, 
    0.4879233369602657,
    4.8934754961589695, 
    3.697285769720824,
    1.0754112854143516,

    0.221936172352179, #k1
    6.081963924603686, #k2
    74.60149998881774, #k3
    929.5659753695654, #k4
    5.815052050675676, #k5
    0.539494697127057, #k6

    10.177238034144443, # d1 
    10.610875554141064, # d2 
    1.3262458309759877,
    4.486099857321717,
    0.01602458080336531,
    0.03416214467083285,
    59.611074450040185,
    0.5697851077620799,
    
    14.068450976326906,
    0.4108126097661595,
    
    [0.007911968983771049,
    
    8.851474387488993, 5.999229998549251, 5.573047884761726] #u0
    )

new_christ = neoParams(
        1.8728241605057228, 
        0.4879233369602657,
        4.8934754961589695, 
        3.697285769720824,
        1.0754112854143516,
    
        0.221936172352179, #k1
        6.081963924603686, #k2
        74.60149998881774, #k3
        929.5659753695654, #k4
        5.815052050675676, #k5
        0.539494697127057, #k6
    
        10.177238034144443, # d1 
        10.610875554141064, # d2 
        1.3262458309759877,
        4.486099857321717,
        0.01602458080336531,
        0.03416214467083285,
        59.611074450040185,
        0.5697851077620799,
        
        14.068450976326906, # s1 
        0.4108126097661595, # s2

        2.00967898765, # n1
        
        [0.007911968983771049,
        
        8.851474387488993, 5.999229998549251, 5.573047884761726] #u0
        )
    


    ### Random crap
 
# """Default values getter"""
# function get_default_values()
#     # Define initial-value problem.
#     u0 = [0.0084; 9.56; 4.95; 6.65; 0]

#     pt = [1.556, 0.4151, 5.269, 3.98, 1.39]
#     pk = [0.1942, 6.04, 79.56, 1054, 5.54, 0.49]
#     pd = [11.31, 9.72, 1.25, 4.85, 0.017, 0.0381, 51.37, 0.56]
#     ps = [14.53, 0.3434]
#     p=[pt; pk; pd; ps] # Combine all in a single vector

#     return u0, p
# end

# function get_christian()
#     p=[1.4700, 0.3800, 5.4100, 3.7400, 1.3600, 0.1700, 5.3000, 83.9000,
#      1292.2, 4.8500, 0.4900, 9.9700, 11.0500, 1.0900,
#      5.8000, 0.0200, 0.0400, 51.9400, 0.6100, 16, 0.3500]

#     u0=[0.0090, 10, 4.4000, 7.0600, 0]

#     return u0, p
# end

# function get_temp_test()
#     p = [1.5560, 0.4151, 5.2695, 3.9868, 1.3903, 0.1942, 6.0401, 79.5663, 
#     1.0546e+03, 5.4378, 0.4901, 11.3173, 9.7233, 1.2598, 4.8524, 0.0171, 
#     0.0381, 51.3708, 0.5607, 14.5359, 0.3434] 
    
#     u0 = [0.0084, 9.5608, 4.9575, 6.6580, 0]
    
#     return u0, p
# end

# function get_temp_test2()

#     p = [4.9487, 4.2399, 9.9006, 0.4167, 8.3883, 3.0158, 0.9189, 154.1321,
#     874.7748, 0.4008, 3.4200, 6.4546, 13.7066, 9.5774, 5.6896, 2.1396, 7.7700,
#     84.1471, 0.4819, 48.1169, 8.5841]

#     u0 = [0.7994, 9.7683, 1.6256, 5.6674, 0]
    
#     return u0, p
# end